{
  "version": "1.2",
  "generated": "2025-01-12T16:55:00Z",
  "status": "target_architecture_updated_phase1_foundation_complete",
  "project": {
    "name": "AI Coding Workflow Management Platform",
    "description": "Comprehensive AI coding workflow management platform that preserves context across AI sessions, intelligently manages prompts, and integrates seamlessly with Claude Code and Cursor",
    "version": "1.0.0",
    "tech_stack": {
      "backend": "FastAPI, SQLAlchemy, PostgreSQL, Redis (cache), Alembic (migrations)",
      "frontend": "HTMX, Progressive Web App, Modern CSS, JavaScript",
      "ai_integration": "Google Gemini, Claude Code API, Cursor integration",
      "deployment": "Docker, AWS/GCP, CI/CD pipeline",
      "authentication": "JWT, OAuth2, bcrypt, email verification",
      "email": "SMTP/Mock email services for verification and password reset",
      "data_compression": "orjson, zlib compression for context optimization",
      "version_control": "diff-match-patch for content versioning"
    },
    "deployment": "Production-ready containerized deployment with scaling capabilities",
    "repository": "https://github.com/mmariani/AIhelpers"
  },
  "documentation": {
    "readme": "README.md",
    "task_list": "docs/task_list.md", 
    "prd": "docs/PRD_AI_Coding_Workflow_MVP.md",
    "architecture": "docs/architecture.md",
    "api_docs": "docs/api_documentation.md",
    "user_guide": "docs/user_guide.md",
    "deployment_guide": "docs/deployment.md",
    "manifest_evolution": "docs/manifest_evolution.md",
    "existing_docs": [
      "docs/parsinator/manifest_workflow_summary.md",
      "docs/examples/generic_manifest_evolution.md"
    ]
  },
  "files": {
    "backend": {
      "src/main.py": "Application entry point and CLI orchestration",
      "src/webapp/main.py": "FastAPI web application with authentication, usage limits, and context integration",
      "src/auth/": "Comprehensive authentication system (dependencies, middleware, OAuth2, JWT, usage limits, email verification)",
      "src/config/": "Configuration management with database connection and environment handling",
      "src/models/": "SQLAlchemy models (User, Prompt, SessionContext, Team, Analytics) with subscription tiers and relationships",
      "src/services/": "Business logic services (context, prompt, subscription, email, analytics, search, versioning)",
      "src/api/": "API route handlers organized by feature (context preservation with compression)",
      "src/schemas/": "Pydantic schemas for request/response validation including subscription and context schemas",
      "src/utils/": "Utility functions including context compression with 60%+ size reduction",
      "src/scripts/": "Migration and maintenance scripts for data transformation",
      "src/integrations/": "External service integrations (Claude Code, Cursor, AI providers)",
      "alembic/": "Database migration scripts using Alembic with user model and subscription tier migrations"
    },
    "parsinator": {
      "src/parsinator/": "Complete task generation system (existing, enhanced)",
      "src/parsinator/ai_integration.py": "Enhanced AI-powered task generation",
      "src/parsinator/collaboration.py": "Team-based brief processing"
    },
    "frontend": {
      "src/webapp/static/": "HTMX-powered frontend with context management and PWA capabilities",
      "src/webapp/static/context-manager.js": "Advanced context management with compression and tool formatting",
      "src/webapp/static/components/": "Reusable UI components and modals",
      "src/webapp/static/pages/": "Page-specific JavaScript and CSS with responsive design",
      "src/webapp/static/workers/": "Service workers for offline functionality and caching"
    },
    "infrastructure": {
      "docker/": "Container configurations for development and production",
      "scripts/": "Deployment and maintenance scripts",
      "tests/": "Comprehensive test suite (unit, integration, e2e)",
      "monitoring/": "Application monitoring and observability"
    },
    "configuration": {
      "requirements.txt": "Python dependencies with auth and performance packages",
      "package.json": "Frontend dependencies and build scripts",
      "docker-compose.yml": "Development environment setup",
      "Dockerfile": "Production container configuration",
      ".env.example": "Environment variables template with email and database config"
    }
  },
  "dependencies": {
    "core_backend": [
      "fastapi>=0.111.0",
      "uvicorn>=0.20.0",
      "sqlalchemy>=2.0.0",
      "alembic>=1.12.0",
      "psycopg2-binary>=2.9.0",
      "redis>=5.0.0",
      "celery>=5.3.0",
      "pydantic>=2.0.0",
      "python-multipart>=0.0.5",
      "python-jose[cryptography]>=3.3.0",
      "passlib[bcrypt]>=1.7.4",
      "python-dotenv>=1.0.0",
      "email-validator>=1.1.0",
      "orjson>=3.9.0",
      "diff-match-patch>=20230430"
    ],
    "ai_integration": [
      "google-generativeai>=0.5.4",
      "openai>=1.0.0",
      "anthropic>=0.25.0",
      "tiktoken>=0.5.0"
    ],
    "data_processing": [
      "pandas>=2.0.0",
      "numpy>=1.24.0",
      "scikit-learn>=1.3.0"
    ],
    "monitoring": [
      "prometheus-client>=0.17.0",
      "sentry-sdk>=1.32.0",
      "structlog>=23.0.0"
    ],
    "testing": [
      "pytest>=7.4.0",
      "pytest-asyncio>=0.21.0",
      "pytest-cov>=4.1.0",
      "httpx>=0.24.0"
    ],
    "frontend": [
      "htmx>=1.9.0",
      "alpinejs>=3.13.0"
    ]
  },
  "architecture": {
    "main_flow": "User authentication → Subscription management → Prompt library management → Context preservation → AI tool integration → Team collaboration → Analytics",
    "data_flow": "User registration → Email verification → Subscription tier assignment → Template processing → AI generation → Context compression → Session restoration → Usage tracking → Analytics",
    "configuration": "Environment-based configuration with secure secrets management and feature flags",
    "key_components": [
      "Complete User Authentication & Authorization System (OAuth2, JWT, email verification)",
      "Subscription Tier Management with Usage Limits (FREE: 50 prompts, 10 briefs monthly)",
      "Intelligent Prompt Library with semantic search and versioning",
      "Advanced Session Context Preservation Engine with 60%+ compression",
      "Tool-Specific Format Optimization (Claude Code, Cursor, ChatGPT)",
      "Context Compression and Storage Optimization using orjson and zlib",
      "Template-Driven Prompt Creation with database integration",
      "Real-time Context Management with HTMX integration",
      "Enhanced Parsinator with AI integration and dependency analysis",
      "Service-Oriented Architecture with clear separation of concerns",
      "Progressive Web App frontend with offline capabilities",
      "Comprehensive API with authentication, authorization, and usage limits",
      "Email Service Infrastructure (mock for development, SMTP for production)",
      "Usage Analytics and Tracking System"
    ],
    "integration_points": [
      "Claude Code API for session context",
      "Cursor extension for prompt sharing",
      "Google Gemini for AI generation",
      "PostgreSQL for persistent storage with Alembic migrations",
      "Redis for caching and sessions",
      "WebSocket for real-time features",
      "SMTP/Email service providers for notifications",
      "External authentication providers",
      "Analytics and monitoring services"
    ]
  },
  "features": {
    "core_features": [
      "User authentication with email verification",
      "Subscription tier management (FREE/PROFESSIONAL/TEAM)",
      "Usage limit enforcement for freemium model",
      "Intelligent prompt library with search",
      "Session context preservation with compression",
      "AI tool integrations",
      "Team collaboration basics",
      "Analytics dashboard",
      "Enhanced project brief processing",
      "Template-driven prompt creation",
      "Progressive web app functionality"
    ],
    "advanced_features": [
      "Advanced analytics and insights",
      "Custom AI model integration",
      "Advanced team permissions",
      "API access for third-party tools",
      "Workflow automation",
      "Enterprise security features"
    ]
  },
  "data_models": {
    "user_management": {
      "User": "id, email, name, hashed_password, subscription_tier, is_active, is_email_verified, email_verification_token, email_verified_at, created_at, updated_at",
      "Team": "id, name, owner_id, subscription_tier, created_at, updated_at",
      "TeamMember": "user_id, team_id, role, permissions, joined_at"
    },
    "prompt_system": {
      "Prompt": "id, title, content, description, category, tags, owner_id, team_id, is_public, version, created_at, updated_at",
      "PromptVersion": "id, prompt_id, content, version_number, change_description, created_at",
      "PromptUsage": "id, prompt_id, user_id, used_at, context_data, response_time, success"
    },
    "context_preservation": {
      "SessionContext": "id, user_id, title, ai_tool, context_data, compressed_data, compression_ratio, metadata, size_bytes, created_at, updated_at",
      "ContextSnapshot": "id, session_id, snapshot_data, snapshot_metadata, created_at"
    },
    "analytics": {
      "UserActivity": "id, user_id, activity_type, activity_data, timestamp, session_id",
      "UsageMetrics": "id, user_id, metric_type, value, period_start, period_end, created_at"
    }
  },
  "security": {
    "authentication": "JWT tokens with refresh mechanism and email verification",
    "authorization": "Role-based access control (RBAC) with subscription tier enforcement",
    "data_protection": "Encryption at rest and in transit with bcrypt password hashing",
    "api_security": "Rate limiting, input validation, CORS configuration, usage limits",
    "compliance": "SOC2 Type II readiness, GDPR compliance",
    "email_security": "Email verification workflow with secure token generation"
  },
  "performance": {
    "caching": "Redis for session storage and frequently accessed data",
    "database": "PostgreSQL with optimized queries, indexing, and connection pooling",
    "frontend": "Progressive Web App with offline capabilities",
    "scalability": "Horizontal scaling with load balancing",
    "monitoring": "Comprehensive observability stack",
    "compression": "Context compression achieving 60%+ size reduction using orjson and zlib"
  },
  "development": {
    "approach": "Manifest-driven development retrofitted to existing codebase",
    "target_phase": "phase_1_foundation_complete",
    "completion_status": {
      "task_1": "COMPLETE - Database Schema & Models Setup",
      "task_2": "COMPLETE - User Authentication & Authorization System",
      "task_3": "PENDING - Enhanced Prompt Library Backend",
      "task_4": "COMPLETE - Context Preservation Engine"
    },
    "completion_criteria": [
      "All 20 tasks in task_list.md completed with 75 subtasks",
      "All acceptance criteria met from PRD",
      "Production deployment ready with CI/CD pipeline",
      "Documentation complete for users and developers",
      "Security audit passed",
      "Performance benchmarks met",
      "1000+ registered users achieved",
      "10% conversion to paid plans",
      "85% user retention rate"
    ],
    "quality_assurance": [
      "Comprehensive test coverage (>80%)",
      "Automated CI/CD pipeline",
      "Code review process",
      "Security scanning",
      "Performance monitoring",
      "User acceptance testing"
    ],
    "deployment_strategy": [
      "Blue-green deployment",
      "Database migration automation with Alembic",
      "Feature flags for gradual rollout",
      "Monitoring and alerting",
      "Rollback procedures"
    ]
  },
  "business_metrics": {
    "target_revenue": "$25K MRR by Month 6",
    "user_acquisition": "1,000 registered users within 3 months",
    "conversion_rate": "10% conversion to paid plans",
    "retention_rate": "85% user retention after 30 days",
    "feature_adoption": "70% of users create/use prompt templates within first week",
    "efficiency_gains": "60% reduction in session setup time",
    "freemium_model": {
      "free_tier": "50 prompts/month, 10 briefs/month, 20 validations/month",
      "professional_tier": "Unlimited usage, advanced analytics",
      "team_tier": "Unlimited usage, team collaboration features"
    }
  }
}